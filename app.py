from flask import Flask, request, jsonify, render_template
import os
from werkzeug.utils import secure_filename
import openai

app = Flask(__name__)
UPLOAD_FOLDER = 'static/uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

openai.api_key = os.getenv("OPENAI_API_KEY")

@app.route('/')
def index():
    return render_template('form.html')

@app.route('/generate', methods=['POST'])
def generate():
    data = request.form

    # –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ —Å–Ω–∏–º–∫–∏—Ç–µ
    image_files = request.files.getlist('images')
    image_urls = []
    for image in image_files:
        if image:
            filename = secure_filename(image.filename)
            path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            image.save(path)
            image_urls.append(f'/static/uploads/{filename}')

    # –°–≥–ª–æ–±—è–≤–∞–Ω–µ –Ω–∞ –≤—Ö–æ–¥ –∑–∞ AI
    prompt = f"""
    –°—ä–∑–¥–∞–π —É–±–µ–¥–∏—Ç–µ–ª–Ω–∞, –µ–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–æ –≤—ä–∑–¥–µ–π—Å—Ç–≤–∞—â–∞ –∏ –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∞ –æ–±—è–≤–∞ –∑–∞ –ø—Ä–æ–¥–∞–∂–±–∞ –Ω–∞ –∏–º–æ—Ç –ø–æ —Å–ª–µ–¥–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏:
    - –õ–æ–∫–∞—Ü–∏—è: {data.get('location')}
    - –¶–µ–Ω–∞: {data.get('price')} ‚Ç¨
    - –ü–ª–æ—â: {data.get('area')} –∫–≤.–º
    - –ï—Ç–∞–∂: {data.get('floor')}
    - –ì–æ–¥–∏–Ω–∞ –Ω–∞ —Å—Ç—Ä–æ–µ–∂: {data.get('year_built')}
    - –ú–µ—Å–µ—á–Ω–∞ –≤–Ω–æ—Å–∫–∞: {data.get('installment')} ‚Ç¨ —á—Ä–µ–∑ –±–∞–Ω–∫–æ–≤ –∫—Ä–µ–¥–∏—Ç
    - –û–±–∑–∞–≤–µ–∂–¥–∞–Ω–µ: {data.get('furnishing')}
    - –ü–∞–Ω–æ—Ä–∞–º–∞: {data.get('panorama')}
    - –ê—Å–∞–Ω—Å—å–æ—Ä: {data.get('elevator')}
    - –ì–∞—Ä–∞–∂: {data.get('garage')}
    - –ï–∫—Å–∫–ª—É–∑–∏–≤–Ω–æ—Å—Ç: {data.get('exclusive')}
    - –§–∏–Ω–∞–Ω—Å–∏—Ä–∞–Ω–µ: {data.get('financing')}
    - –£–Ω–∏–∫–∞–ª–Ω–∏ –ø—Ä–µ–¥–∏–º—Å—Ç–≤–∞: {data.get('unique_features')}

    –û–±—è–≤–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –≤–∫–ª—é—á–≤–∞:
    1. –ó–∞–≥–ª–∞–≤–∏–µ (–≤ —Å—Ç–∏–ª–∞ –Ω–∞ "–ö—É–ø–∏ –∑–∞ 580 ‚Ç¨/–º–µ—Å–µ—Ü ‚Äì –ù–∞–ø—ä–ª–Ω–æ –æ–±–∑–∞–≤–µ–¥–µ–Ω, —Å –ø–∞–Ω–æ—Ä–∞–º–∞")
    2. –í—Å—Ç—ä–ø–∏—Ç–µ–ª–µ–Ω –∞–±–∑–∞—Ü —Å –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∫–ª—é—á–æ–≤–∏—Ç–µ –ø—Ä–µ–¥–∏–º—Å—Ç–≤–∞
    3. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∑–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
    4. –§–∏–Ω–∞–Ω—Å–∏—Ä–∞–Ω–µ: –≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ —Ñ—Ä–∞–∑–∞—Ç–∞:
       "‚ú® –¢–æ–∑–∏ –∏–º–æ—Ç –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –∑–∞–∫—É–ø–µ–Ω –Ω–∞ —Ä–∞–∑—Å—Ä–æ—á–µ–Ω–æ –ø–ª–∞—â–∞–Ω–µ —á—Ä–µ–∑ –ë–∞–Ω–∫–æ–≤ –ò–ø–æ—Ç–µ—á–µ–Ω –ö—Ä–µ–¥–∏—Ç —Å –º–µ—Å–µ—á–Ω–∞ –≤–Ω–æ—Å–∫–∞ –æ—Ç {data.get('installment')} ‚Ç¨.\nüîì–ë–µ–∑ –Ω–∞—á–∞–ª–µ–Ω –∫–∞–ø–∏—Ç–∞–ª, –±–µ–∑ –¥–æ–∫–∞–∑–∞–Ω–∏ –¥–æ—Ö–æ–¥–∏ –∏–ª–∏ —Å –≤–ª–æ—à–µ–Ω–∞ –∫—Ä–µ–¥–∏—Ç–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è ‚Äì –Ω–∏–µ —Å—ä–¥–µ–π—Å—Ç–≤–∞–º–µ –∑–∞ —É—Å–ø–µ—à–Ω–æ –±–∞–Ω–∫–æ–≤–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–∞–Ω–µ.\nüìå –§–∏–Ω–∞–Ω—Å–∏—Ä–∞–Ω–µ—Ç–æ –Ω–µ –µ –ø—Ä–µ—á–∫–∞ ‚Äì —Ç–æ –µ —á–∞—Å—Ç –æ—Ç —Ä–µ—à–µ–Ω–∏–µ—Ç–æ."
    5. –ü—Ä–∏–∑–∏–≤ –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ —Å —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ –≤—Ä—ä–∑–∫–∞: 0896 804 359
    6. –Ø—Å–µ–Ω, –ø–æ–¥—Ä–µ–¥–µ–Ω –∏ —á–µ—Ç–∏–º —Ñ–æ—Ä–º–∞—Ç
    """

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "–¢–∏ —Å–∏ –µ–∫—Å–ø–µ—Ä—Ç –ø–æ –∏–º–æ—Ç–Ω–∏ –æ–±—è–≤–∏."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.8,
            max_tokens=1200
        )

        generated_ad = response.choices[0].message.content.strip()

    except Exception as e:
        return jsonify({"error": f"AI –≥—Ä–µ—à–∫–∞: {str(e)}"}), 500

    return jsonify({
        'generated_ad': generated_ad,
        'image_urls': image_urls
    })

if __name__ == '__main__':
    app.run(debug=True)

